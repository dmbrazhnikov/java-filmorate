CREATE TABLE IF NOT EXISTS mpa_rating (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name VARCHAR NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS genres (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name VARCHAR NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS films (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name VARCHAR NOT NULL,
	description VARCHAR(200),
	release_date DATE,
	duration_minutes INTEGER
);

CREATE TABLE IF NOT EXISTS film_rating (
    film_id INTEGER REFERENCES films (id) ON DELETE CASCADE,
    rating_id INTEGER REFERENCES mpa_rating (id) ON DELETE RESTRICT,
    PRIMARY KEY (film_id, rating_id)
);

CREATE TABLE IF NOT EXISTS film_genre (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	film_id INTEGER REFERENCES films (id) ON DELETE CASCADE,
	genre_id INTEGER REFERENCES genres (id) ON DELETE CASCADE
);
CREATE INDEX IF NOT EXISTS ON film_genre (film_id);

CREATE TABLE IF NOT EXISTS users (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	login VARCHAR NOT NULL,
	name VARCHAR,
	email VARCHAR NOT NULL,
	birth_date DATE
);

CREATE TABLE IF NOT EXISTS film_likes (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	film_id INTEGER REFERENCES films (id) ON DELETE CASCADE,
	user_id INTEGER REFERENCES users (id) ON DELETE CASCADE
);
CREATE INDEX IF NOT EXISTS ON film_likes (film_id);

CREATE TABLE IF NOT EXISTS friendship_status (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name VARCHAR NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS users_friendship (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	user_id INTEGER REFERENCES users (id) ON DELETE CASCADE,
	friend_user_id INTEGER REFERENCES users (id) ON DELETE CASCADE,
	status_id INTEGER NOT NULL REFERENCES friendship_status (id) ON DELETE RESTRICT,
	last_updated TIMESTAMP DEFAULT now()
);